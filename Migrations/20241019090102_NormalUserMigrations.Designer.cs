// <auto-generated />
using System;
using Local_Alternatives.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Local_Alternatives.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241019090102_NormalUserMigrations")]
    partial class NormalUserMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Local_Alternatives.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("UserType").HasValue("AppUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Local_Alternatives.Models.Cities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimaryCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c9d694e-b91d-46a0-9375-90ac8fb14990"),
                            Country = "North Macedonia",
                            Name = "Skopje",
                            PrimaryCity = "Skopje"
                        },
                        new
                        {
                            Id = new Guid("bba7d61d-2646-4a22-b6fd-f0dc1da3cb07"),
                            Country = "North Macedonia",
                            Name = "Kumanovo",
                            PrimaryCity = "Kumanovo"
                        },
                        new
                        {
                            Id = new Guid("bb3a159c-b985-47bb-971f-9c98b958409d"),
                            Country = "North Macedonia",
                            Name = "Bitola",
                            PrimaryCity = "Bitola"
                        },
                        new
                        {
                            Id = new Guid("608b86a9-b4ec-4de0-9395-7d84ea136fa9"),
                            Country = "North Macedonia",
                            Name = "Prilep",
                            PrimaryCity = "Prilep"
                        },
                        new
                        {
                            Id = new Guid("4df3e52c-5049-422f-ac36-fe7a79267ca6"),
                            Country = "North Macedonia",
                            Name = "Tetovo",
                            PrimaryCity = "Tetovo"
                        },
                        new
                        {
                            Id = new Guid("1eef013e-9805-4c29-9116-80669129d7f3"),
                            Country = "North Macedonia",
                            Name = "Štip",
                            PrimaryCity = "Štip"
                        },
                        new
                        {
                            Id = new Guid("74f55d3e-b9b7-4f17-9294-0edb7f8268ca"),
                            Country = "North Macedonia",
                            Name = "Veles",
                            PrimaryCity = "Veles"
                        },
                        new
                        {
                            Id = new Guid("c73e4c1a-1363-4382-bf50-292d5dede0d4"),
                            Country = "North Macedonia",
                            Name = "Ohrid",
                            PrimaryCity = "Ohrid"
                        },
                        new
                        {
                            Id = new Guid("20aa7f32-3b12-4b93-bd86-4d560674e2e1"),
                            Country = "North Macedonia",
                            Name = "Strumica",
                            PrimaryCity = "Strumica"
                        },
                        new
                        {
                            Id = new Guid("3dedc46b-26e9-410d-996a-3e5e3b0fc51d"),
                            Country = "North Macedonia",
                            Name = "Gostivar",
                            PrimaryCity = "Gostivar"
                        },
                        new
                        {
                            Id = new Guid("5b3cbc16-4348-4f66-988a-1c4e9d24493f"),
                            Country = "North Macedonia",
                            Name = "Kočani",
                            PrimaryCity = "Kočani"
                        },
                        new
                        {
                            Id = new Guid("5bebfba5-49d0-42ae-94e1-0569a29671d9"),
                            Country = "North Macedonia",
                            Name = "Dračevo",
                            PrimaryCity = "Skopje"
                        },
                        new
                        {
                            Id = new Guid("8863c7b9-b05c-41a4-a72e-cdb97a8d1e79"),
                            Country = "North Macedonia",
                            Name = "Struga",
                            PrimaryCity = "Struga"
                        },
                        new
                        {
                            Id = new Guid("18fb821b-84c7-44a1-a35c-cd92529ae71e"),
                            Country = "North Macedonia",
                            Name = "Debar",
                            PrimaryCity = "Debar"
                        },
                        new
                        {
                            Id = new Guid("7687445e-2816-4e25-8b9c-8dd6e6e2cb59"),
                            Country = "North Macedonia",
                            Name = "Kriva Palanka",
                            PrimaryCity = "Kriva Palanka"
                        },
                        new
                        {
                            Id = new Guid("29c89b26-a233-4ce5-86b5-6c3ec91936c2"),
                            Country = "North Macedonia",
                            Name = "Negotino",
                            PrimaryCity = "Negotino"
                        },
                        new
                        {
                            Id = new Guid("6072608f-7783-4a28-8c21-bfed9e7e5247"),
                            Country = "North Macedonia",
                            Name = "Sveti Nikole",
                            PrimaryCity = "Sveti Nikole"
                        },
                        new
                        {
                            Id = new Guid("e9f1deb9-5e84-447a-866c-5d539880d2c1"),
                            Country = "North Macedonia",
                            Name = "Probištip",
                            PrimaryCity = "Probištip"
                        },
                        new
                        {
                            Id = new Guid("4e8c5c63-3268-418b-af6f-bff5f0dff0b7"),
                            Country = "North Macedonia",
                            Name = "Delčevo",
                            PrimaryCity = "Delčevo"
                        },
                        new
                        {
                            Id = new Guid("18459813-6683-409d-905f-d88432220a1e"),
                            Country = "North Macedonia",
                            Name = "Vinica",
                            PrimaryCity = "Vinica"
                        },
                        new
                        {
                            Id = new Guid("93aa94fc-2c9e-4e72-88ba-6e9ba1d6f4fe"),
                            Country = "North Macedonia",
                            Name = "Aračinovo",
                            PrimaryCity = "Aračinovo"
                        },
                        new
                        {
                            Id = new Guid("dc22d14d-d3d7-44f7-be1b-d23a95501779"),
                            Country = "North Macedonia",
                            Name = "Kičevo",
                            PrimaryCity = "Kičevo"
                        },
                        new
                        {
                            Id = new Guid("4fdf316a-5218-49fb-ab59-09f568b0844f"),
                            Country = "North Macedonia",
                            Name = "Kavadarci",
                            PrimaryCity = "Kavadarci"
                        },
                        new
                        {
                            Id = new Guid("8e554017-30b5-4b8f-8e80-fc7abe2fda6b"),
                            Country = "North Macedonia",
                            Name = "Berovo",
                            PrimaryCity = "Berovo"
                        },
                        new
                        {
                            Id = new Guid("9a4ca75d-a93e-4bc3-9e06-32e8ab0adac1"),
                            Country = "North Macedonia",
                            Name = "Kratovo",
                            PrimaryCity = "Kratovo"
                        },
                        new
                        {
                            Id = new Guid("48bf0027-952d-4ab2-8d1d-4aa0be5f8534"),
                            Country = "North Macedonia",
                            Name = "Gevgelija",
                            PrimaryCity = "Gevgelija"
                        },
                        new
                        {
                            Id = new Guid("920bdc36-c575-4cd9-9e68-5a648d2b5491"),
                            Country = "North Macedonia",
                            Name = "Vrapčište",
                            PrimaryCity = "Vrapčište"
                        },
                        new
                        {
                            Id = new Guid("0b906340-6806-402f-860e-d7de8033d3aa"),
                            Country = "North Macedonia",
                            Name = "Radoviš",
                            PrimaryCity = "Radoviš"
                        },
                        new
                        {
                            Id = new Guid("d7c09c35-bccc-4067-b764-e87790c84041"),
                            Country = "North Macedonia",
                            Name = "Kruševo",
                            PrimaryCity = "Kruševo"
                        },
                        new
                        {
                            Id = new Guid("67d42377-60c5-4615-b037-70d93eea6c80"),
                            Country = "North Macedonia",
                            Name = "Čegrane",
                            PrimaryCity = "Gostivar"
                        },
                        new
                        {
                            Id = new Guid("5369f5e0-b4b1-4aec-9313-416e0beb9d88"),
                            Country = "North Macedonia",
                            Name = "Makedonski Brod",
                            PrimaryCity = "Makedonski Brod"
                        },
                        new
                        {
                            Id = new Guid("1b64bea1-3d16-4607-bb7a-bd281fe9a720"),
                            Country = "North Macedonia",
                            Name = "Demir Kapija",
                            PrimaryCity = "Demir Kapija"
                        },
                        new
                        {
                            Id = new Guid("da075c61-2295-4dbd-9588-cdfb508d1e78"),
                            Country = "North Macedonia",
                            Name = "Kučevište",
                            PrimaryCity = "Čučer-Sandevo"
                        },
                        new
                        {
                            Id = new Guid("3b867056-ce2f-4ddd-9889-24d1d43aeae2"),
                            Country = "North Macedonia",
                            Name = "Tearce",
                            PrimaryCity = "Tearce"
                        },
                        new
                        {
                            Id = new Guid("43e92ba7-2f15-4adc-b19c-de92c99a5ae8"),
                            Country = "North Macedonia",
                            Name = "Bogdanci",
                            PrimaryCity = "Bogdanci"
                        },
                        new
                        {
                            Id = new Guid("29f69f74-5383-4635-832a-57c8b6684976"),
                            Country = "North Macedonia",
                            Name = "Forino",
                            PrimaryCity = "Gostivar"
                        },
                        new
                        {
                            Id = new Guid("54ea3cda-8e03-4ce3-9698-4610169589bf"),
                            Country = "North Macedonia",
                            Name = "Rašče",
                            PrimaryCity = "Skopje"
                        },
                        new
                        {
                            Id = new Guid("98923e7a-f5c1-41e2-9efb-603239e6f157"),
                            Country = "North Macedonia",
                            Name = "Rosoman",
                            PrimaryCity = "Rosoman"
                        },
                        new
                        {
                            Id = new Guid("228d1328-102b-456b-977a-99dfbe8ebc08"),
                            Country = "North Macedonia",
                            Name = "Demir Hisar",
                            PrimaryCity = "Demir Hisar"
                        },
                        new
                        {
                            Id = new Guid("cf03dcbb-acec-4e39-b734-14ce6d5a9e54"),
                            Country = "North Macedonia",
                            Name = "Vevčani",
                            PrimaryCity = "Vevčani"
                        },
                        new
                        {
                            Id = new Guid("29a74352-bd03-458c-8511-47941b57ec82"),
                            Country = "North Macedonia",
                            Name = "Gradsko",
                            PrimaryCity = "Gradsko"
                        },
                        new
                        {
                            Id = new Guid("c389c6e8-45e5-49d8-8a09-bb54546986cd"),
                            Country = "North Macedonia",
                            Name = "Valandovo",
                            PrimaryCity = "Valandovo"
                        },
                        new
                        {
                            Id = new Guid("9ecdcc96-705e-42fe-8c01-2685be3e4fd7"),
                            Country = "North Macedonia",
                            Name = "Krivogaštani",
                            PrimaryCity = "Krivogaštani"
                        },
                        new
                        {
                            Id = new Guid("f9add475-cf03-44e4-9a3f-a475a155e2f3"),
                            Country = "North Macedonia",
                            Name = "Pehčevo",
                            PrimaryCity = "Pehčevo"
                        },
                        new
                        {
                            Id = new Guid("06707dbd-664c-4410-876b-8b0818230642"),
                            Country = "North Macedonia",
                            Name = "Plasnica",
                            PrimaryCity = "Plasnica"
                        },
                        new
                        {
                            Id = new Guid("f792a470-f776-4a1f-837e-215452cc4704"),
                            Country = "North Macedonia",
                            Name = "Zrnovci",
                            PrimaryCity = "Zrnovci"
                        },
                        new
                        {
                            Id = new Guid("af1c5c4c-2f8c-475c-b967-659e553c3426"),
                            Country = "North Macedonia",
                            Name = "Novaci",
                            PrimaryCity = "Novaci"
                        },
                        new
                        {
                            Id = new Guid("5c5128d6-9c9e-4f5d-b1e5-723a85d97747"),
                            Country = "North Macedonia",
                            Name = "Bosilovo",
                            PrimaryCity = "Bosilovo"
                        },
                        new
                        {
                            Id = new Guid("e432a29a-75f7-4b58-b377-8762aced5d33"),
                            Country = "North Macedonia",
                            Name = "Mogila",
                            PrimaryCity = "Mogila"
                        },
                        new
                        {
                            Id = new Guid("367ac1ba-b429-4f77-ac5e-ba5d90af76c5"),
                            Country = "North Macedonia",
                            Name = "Novo Selo",
                            PrimaryCity = "Novo Selo"
                        },
                        new
                        {
                            Id = new Guid("c6017048-3b0c-4b5c-8d70-c40131af78fe"),
                            Country = "North Macedonia",
                            Name = "Konče",
                            PrimaryCity = "Konče"
                        },
                        new
                        {
                            Id = new Guid("4af5a86a-764f-4458-87dd-0e1dd94fdb8c"),
                            Country = "North Macedonia",
                            Name = "Rostuša",
                            PrimaryCity = "Mavrovo i Rostuše"
                        },
                        new
                        {
                            Id = new Guid("422494cb-a66d-4576-8f3e-16d2d855d346"),
                            Country = "North Macedonia",
                            Name = "Jegunovce",
                            PrimaryCity = "Jegunovce"
                        },
                        new
                        {
                            Id = new Guid("3baaf6da-f57a-4933-8ca6-ff34c8c1c921"),
                            Country = "North Macedonia",
                            Name = "Rankovce",
                            PrimaryCity = "Rankovce"
                        },
                        new
                        {
                            Id = new Guid("c00f181f-4d8e-49be-bccd-91dfba237edf"),
                            Country = "North Macedonia",
                            Name = "Sopište",
                            PrimaryCity = "Sopište"
                        },
                        new
                        {
                            Id = new Guid("77e4e487-4f7e-48b8-ba06-e1c2cece1dcf"),
                            Country = "North Macedonia",
                            Name = "Obleševo",
                            PrimaryCity = "Češinovo-Obleševo"
                        },
                        new
                        {
                            Id = new Guid("cb8871b9-6592-4e8b-b3e0-1c0962ea81f0"),
                            Country = "North Macedonia",
                            Name = "Vasilevo",
                            PrimaryCity = "Vasilevo"
                        },
                        new
                        {
                            Id = new Guid("2f6721b6-dea2-4868-bf2d-dd57fae4f00c"),
                            Country = "North Macedonia",
                            Name = "Karbinci",
                            PrimaryCity = "Karbinci"
                        },
                        new
                        {
                            Id = new Guid("8f11f177-d7ca-4776-b34a-4a9343087f62"),
                            Country = "North Macedonia",
                            Name = "Lozovo",
                            PrimaryCity = "Lozovo"
                        },
                        new
                        {
                            Id = new Guid("ae7fe1bf-e166-484b-83c9-a6f8f4d87297"),
                            Country = "North Macedonia",
                            Name = "Staro Nagoričane",
                            PrimaryCity = "Staro Nagoričane"
                        },
                        new
                        {
                            Id = new Guid("9d5e8927-9b47-45aa-9db4-f6e8ce9f7a94"),
                            Country = "North Macedonia",
                            Name = "Brvenica",
                            PrimaryCity = "Brvenica"
                        },
                        new
                        {
                            Id = new Guid("fe45dee8-9e76-4f8b-86f3-e7b04b99cab4"),
                            Country = "North Macedonia",
                            Name = "Centar Župa",
                            PrimaryCity = "Centar Župa"
                        },
                        new
                        {
                            Id = new Guid("92962488-69f4-466e-a32e-fd83045c6101"),
                            Country = "North Macedonia",
                            Name = "Dolneni",
                            PrimaryCity = "Dolneni"
                        },
                        new
                        {
                            Id = new Guid("98522d80-79c8-4598-a0d1-ad494ff991f8"),
                            Country = "North Macedonia",
                            Name = "Belčišta",
                            PrimaryCity = "Debarca"
                        },
                        new
                        {
                            Id = new Guid("fb352de1-681b-4406-987b-f61e18608784"),
                            Country = "North Macedonia",
                            Name = "Čučer-Sandevo",
                            PrimaryCity = "Čučer-Sandevo"
                        },
                        new
                        {
                            Id = new Guid("1ccfaa1a-31e7-409e-84ab-6491fb7fe4e4"),
                            Country = "North Macedonia",
                            Name = "Zelenikovo",
                            PrimaryCity = "Zelenikovo"
                        },
                        new
                        {
                            Id = new Guid("b88b1074-8f59-46e0-8105-cbdb47e41e3d"),
                            Country = "North Macedonia",
                            Name = "Petrovec",
                            PrimaryCity = "Petrovec"
                        },
                        new
                        {
                            Id = new Guid("07bdfc59-7e5f-47f9-9656-aa3112ea7774"),
                            Country = "North Macedonia",
                            Name = "Želino",
                            PrimaryCity = "Želino"
                        },
                        new
                        {
                            Id = new Guid("b55fa826-1d04-4a38-8541-d00d5c07a6ae"),
                            Country = "North Macedonia",
                            Name = "Star Dojran",
                            PrimaryCity = "Dojran"
                        },
                        new
                        {
                            Id = new Guid("c5dadb57-d553-4f42-b7dc-07bf4a834a73"),
                            Country = "North Macedonia",
                            Name = "Studeničani",
                            PrimaryCity = "Studeničani"
                        },
                        new
                        {
                            Id = new Guid("ce5362cd-91dd-4206-8b0b-cf2be8a7d1b4"),
                            Country = "North Macedonia",
                            Name = "Bogovinje",
                            PrimaryCity = "Bogovinje"
                        },
                        new
                        {
                            Id = new Guid("70b329f7-01be-4a51-8906-cc9d8a26b543"),
                            Country = "North Macedonia",
                            Name = "Ilinden",
                            PrimaryCity = "Ilinden"
                        },
                        new
                        {
                            Id = new Guid("d70a6788-bbc3-4812-badc-e7e136517262"),
                            Country = "North Macedonia",
                            Name = "Lipkovo",
                            PrimaryCity = "Lipkovo"
                        },
                        new
                        {
                            Id = new Guid("4fbc22f9-04c9-4f7f-b455-92245afc11e2"),
                            Country = "North Macedonia",
                            Name = "Makedonska Kamenica",
                            PrimaryCity = "Makedonska Kamenica"
                        },
                        new
                        {
                            Id = new Guid("7921954d-5483-4807-856b-08bb1fca3848"),
                            Country = "North Macedonia",
                            Name = "Resen",
                            PrimaryCity = "Resen"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a0b1d76b-0f3f-4d87-a674-27e9f9aff567",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "d7dad361-cac0-4eea-8002-fcaaebae6f3c",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "4d4579db-4c39-490f-9f4a-92c8aa9859d2",
                            Name = "Company",
                            NormalizedName = "COMPANY"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Local_Alternatives.Models.Company", b =>
                {
                    b.HasBaseType("Local_Alternatives.Models.AppUser");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasIndex("CityId");

                    b.HasDiscriminator().HasValue("Company");
                });

            modelBuilder.Entity("Local_Alternatives.Models.NormalUser", b =>
                {
                    b.HasBaseType("Local_Alternatives.Models.AppUser");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasIndex("CityId");

                    b.ToTable("AspNetUsers", t =>
                        {
                            t.Property("Address")
                                .HasColumnName("NormalUser_Address");

                            t.Property("CityId")
                                .HasColumnName("NormalUser_CityId");

                            t.Property("CreatedAt")
                                .HasColumnName("NormalUser_CreatedAt");

                            t.Property("Name")
                                .HasColumnName("NormalUser_Name");

                            t.Property("UpdatedAt")
                                .HasColumnName("NormalUser_UpdatedAt");
                        });

                    b.HasDiscriminator().HasValue("NormalUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Local_Alternatives.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Local_Alternatives.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Local_Alternatives.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Local_Alternatives.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Local_Alternatives.Models.Company", b =>
                {
                    b.HasOne("Local_Alternatives.Models.Cities", "City")
                        .WithMany("Companies")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Local_Alternatives.Models.NormalUser", b =>
                {
                    b.HasOne("Local_Alternatives.Models.Cities", "City")
                        .WithMany("NormalUsers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Local_Alternatives.Models.Cities", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("NormalUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
